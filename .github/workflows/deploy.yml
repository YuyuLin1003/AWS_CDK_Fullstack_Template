name: CI Build and Deploy

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend deps
        working-directory: ./frontend
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Install backend deps
        working-directory: ./backend
        run: npm install

      - name: Build backend
        working-directory: ./backend
        run: |
          npx tsc --outDir dist --project tsconfig.json

      - name: Install infra deps
        working-directory: ./infra
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Build infra
        working-directory: ./infra
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          if-no-files-found: error
          path: |
            frontend/dist/**
            backend/dist/**
            infra/**

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install infra deps (for cdk cli)
        working-directory: ./infra
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Cleanup potential conflicting log groups
        run: |
          aws logs describe-log-groups --log-group-name-prefix "/aws/lambda/InfraStack-CustomCDKBucketDeployment" --query 'logGroups[].logGroupName' --output text | xargs -r -n1 aws logs delete-log-group --log-group-name

      - name: Bootstrap CDK (first time or idempotent)
        working-directory: ./infra
        run: npx cdk bootstrap aws://$AWS_ACCOUNT_ID/$AWS_REGION || true

      - name: Deploy CDK
        working-directory: ./infra
        env:
          CDK_NEW_BOOTSTRAP: 1
        run: npx cdk deploy --all --require-approval never

